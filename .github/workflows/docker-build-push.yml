name: Build and Push Docker Images

on:
  workflow_dispatch:
    inputs:
      buildAll:
        description: 'Build all directories regardless of updates'
        required: true
        default: 'true'
  push:
    branches:
      - main

jobs:
  changed_files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Test changed-files
    outputs:
      all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
      # NOTE: `since_last_remote_commit: true` is implied by default and falls back to the previous local commit.

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
  build-and-push:
    needs: changed_files
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        dir: ${{ fromJson(needs.changed_files.outputs.all_changed_files) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push updated container images
        run: |
            ignore_dirs=(".git" ".github" "NOT-MANTAINED" ".")
            echo "Processing directory: ${{ matrix.dir }}"
            if [[ " ${ignore_dirs[@]} " =~ " ${{ matrix.dir }} " ]]; then
                echo "Ignoring directory: ${{ matrix.dir }}"
                exit 0
            fi
            if [ -f "$dir/version" ]; then
              version=$(cat "$dir/version")
              echo "Found version file in $dir. Using version: $version"
            else
              version="latest"
              echo "No version file found in $dir. Using default version: $version"
            fi
            docker build -t ghcr.io/${{ github.repository }}/${{ matrix.dir }}:$version "$dir"
            docker push ghcr.io/${{ github.repository }}/${{ matrix.dir }}:$version

